AWSTemplateFormatVersion: 2010-09-09


##TODO parameters for
## environment/stack name
## hosted zone
## s3UploadUser, for granting permissions to S3Upload Bucket


Resources:

  #######################################
  #       S3 
  #######################################

  S3UploadBucket:
    Type: 'AWS::S3::Bucket'
    DependsOn:
      - S3InvokeLambdaOutputUploadedPermission
      - S3InvokeLambdaCodeUploadedPermission
      - S3InvokeLambdaRegisterInternPermission
    Properties:
      AccessControl: PublicRead
      BucketName: 
        !Join
          - '-'
          - - !Ref AWS::StackName
            - upload
            - yetanotherwhatever
      NotificationConfiguration:
        LambdaConfigurations:             
          - Function: 
              Fn::GetAtt: [LambdaOutputUploaded, Arn]
            Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'uploads/output/'
          - Function: 
              Fn::GetAtt: [LambdaCodeUploaded, Arn]
            Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'uploads/code/'
          - Function: 
              Fn::GetAtt: [LambdaRegisterIntern, Arn]
            Event: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'uploads/internshipRegistration/'


  #######################################
  #       Permissions & Roles
  #######################################

  #S3 may invoke LambdaOutputUploaded
  S3InvokeLambdaOutputUploadedPermission: 
      Type: AWS::Lambda::Permission
      DependsOn:  LambdaOutputUploaded 
      Properties: 
        Action: lambda:InvokeFunction
        FunctionName: 
          Fn::GetAtt: [LambdaOutputUploaded, Arn]
        Principal: s3.amazonaws.com
        SourceAccount: 
          Ref: AWS::AccountId
        SourceArn: 
          !Join
            - ''
            - - "arn:aws:s3:::"
              -
                !Join
                  - '-'
                  - - !Ref AWS::StackName
                    - upload
                    - yetanotherwhatever

  #S3 may invoke LambdaCodeUploaded
  S3InvokeLambdaCodeUploadedPermission: 
      Type: AWS::Lambda::Permission
      DependsOn:  LambdaCodeUploaded 
      Properties: 
        Action: lambda:InvokeFunction
        FunctionName: 
          Fn::GetAtt: [LambdaCodeUploaded, Arn]
        Principal: s3.amazonaws.com
        SourceAccount: 
          Ref: AWS::AccountId
        SourceArn: 
          !Join
            - ''
            - - "arn:aws:s3:::"
              -
                !Join
                  - '-'
                  - - !Ref AWS::StackName
                    - upload
                    - yetanotherwhatever
  
  #S3 may invoke LambdaRegisterIntern
  S3InvokeLambdaRegisterInternPermission: 
      Type: AWS::Lambda::Permission
      DependsOn:  LambdaRegisterIntern 
      Properties: 
        Action: lambda:InvokeFunction
        FunctionName: 
          Fn::GetAtt: [LambdaRegisterIntern, Arn]
        Principal: s3.amazonaws.com
        SourceAccount: 
          Ref: AWS::AccountId
        SourceArn: 
          !Join
            - ''
            - - "arn:aws:s3:::"
              -
                !Join
                  - '-'
                  - - !Ref AWS::StackName
                    - upload
                    - yetanotherwhatever

  #Lambdas may assume role ocpv2.<stackname>.lambda
  LambdaRole: 
      Type: "AWS::IAM::Role"
      Properties: 
        RoleName: 
          !Join
            - '.'
            - - ocpv2
              - !Ref AWS::StackName
              - lambda
        AssumeRolePolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                Service: 
                  - "lambda.amazonaws.com"
              Action: 
                - "sts:AssumeRole"
        Path: "/"
        Policies: 
          - 
            PolicyName: "root"
            PolicyDocument: 
              Version: "2012-10-17"
              Statement: 
                - Effect: "Allow"
                  Action: "*"
                  Resource: "*"

  #Lambdas may assume role ocpv2.<stackname>.lambda
  LambdaRole: 
      Type: "AWS::IAM::Role"
      Properties: 
        RoleName: 
          !Join
            - '.'
            - - ocpv2
              - !Ref AWS::StackName
              - lambda
        AssumeRolePolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - 
              Effect: "Allow"
              Principal: 
                Service: 
                  - "lambda.amazonaws.com"
              Action: 
                - "sts:AssumeRole"
        Path: "/"
        Policies: 
          - 
            PolicyName: "root"
            PolicyDocument: 
              Version: "2012-10-17"
              Statement: 
                - Effect: "Allow"
                  Action: "*"
                  Resource: "*"



  #######################################
  #       Lambda 
  #######################################

  LambdaOutputUploaded:
    Type: "AWS::Lambda::Function"
    DependsOn : 
      - LambdaRole
    Properties: 
      FunctionName: 
        !Join
          - '_'
          - - !Ref AWS::StackName
            - TestOutput
      Description: check uploaded output against expected, save results for candidate, save results for manager
      Code: 
        S3Bucket: deployocp
        S3Key: !Join
          - '/'
          - - !Ref AWS::StackName
            - lambas/OCPv2-1.0.zip
      Handler: io.yetanotherwhatever.ocpv2.aws.LambdaHandlerTestOutput::handleRequest
      MemorySize: 256
      Role: 
        !Join
          - '/'
          - - !Sub arn:aws:iam::${AWS::AccountId}:role
            - 
              !Join
                - '.'
                - - ocpv2
                  - !Ref AWS::StackName
                  - lambda
      Runtime: java8
      Timeout: 30
      Environment:
        Variables:
          STACK_NAME: !Ref AWS::StackName
          DYNAMODB_REGISTRATION_TABLE:             
            !Join
              - '.'
              - - !Ref AWS::StackName
                - Candidate_Registrations
          DYNAMODB_OUTPUT_UPLOADS_TABLE:
            !Join
              - '.'
              - - !Ref AWS::StackName
                - Output_Uploads
          S3_WEB_BUCKET:
            !Join
              - '.'
              - - !Ref AWS::StackName
                - yetanotherwhatever.io
            

  LambdaCodeUploaded:
    Type: "AWS::Lambda::Function"
    DependsOn : 
      - LambdaRole
    Properties: 
      FunctionName: 
        !Join
          - '_'
          - - !Ref AWS::StackName
            - NotifyCodeUploaded
      Description: notify hiring manager of solution upload, with link to .zip
      Code: 
        S3Bucket: deployocp
        S3Key: !Join
          - '/'
          - - !Ref AWS::StackName
            - lambas/OCPv2-1.0.zip
      Handler: io.yetanotherwhatever.ocpv2.aws.LambdaHandlerNotifyCodeUploaded::handleRequest
      MemorySize: 256
      Role: 
        !Join
          - '/'
          - - !Sub arn:aws:iam::${AWS::AccountId}:role
            - 
              !Join
                - '.'
                - - ocpv2
                  - !Ref AWS::StackName
                  - lambda
      Runtime: java8
      Timeout: 30
      Environment:
        Variables:
          STACK_NAME: !Ref AWS::StackName
          DYNAMODB_REGISTRATION_TABLE:             
            !Join
              - '.'
              - - !Ref AWS::StackName
                - Candidate_Registrations



  LambdaRegisterIntern:
    Type: "AWS::Lambda::Function"
    DependsOn : 
      - LambdaRole
    Properties: 
      FunctionName: 
        !Join
          - '_'
          - - !Ref AWS::StackName
            - RegisterIntern
      Description: Register intern and send problem page
      Code: 
        S3Bucket: deployocp
        S3Key: !Join
          - '/'
          - - !Ref AWS::StackName
            - lambas/OCPv2-1.0.zip
      Handler: io.yetanotherwhatever.ocpv2.aws.LambdaHandlerRegisterIntern::handleRequest
      MemorySize: 256
      Role: 
        !Join
          - '/'
          - - !Sub arn:aws:iam::${AWS::AccountId}:role
            - 
              !Join
                - '.'
                - - ocpv2
                  - !Ref AWS::StackName
                  - lambda
      Runtime: java8
      Timeout: 30
      Environment:
        Variables:
          STACK_NAME: !Ref AWS::StackName
          S3_WEB_BUCKET: 
            !Join
              - '.'
              - - !Ref AWS::StackName
                - yetanotherwhatever.io
          DYNAMODB_REGISTRATION_TABLE:             
            !Join
              - '.'
              - - !Ref AWS::StackName
                - Candidate_Registrations
